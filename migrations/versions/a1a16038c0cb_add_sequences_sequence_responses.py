"""add sequences sequence_responses

Revision ID: a1a16038c0cb
Revises: 27b8286ec905
Create Date: 2019-11-13 06:14:56.589100

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "a1a16038c0cb"
down_revision = "27b8286ec905"
branch_labels = None
depends_on = None


def upgrade():
  # ### commands auto generated by Alembic - please adjust! ###
  op.create_unique_constraint(None, "responses", ["id"])

  op.create_table(
    "sequences",
    sa.Column(
      "id",
      postgresql.UUID(as_uuid=True),
      server_default=sa.text("gen_random_uuid()"),
      nullable=False,
    ),
    sa.Column("title", sa.Unicode(length=255), nullable=False),
    sa.Column("items_json", sa.UnicodeText(), nullable=False),
    sa.Column("items_length", sa.Integer(), nullable=False),
    sa.Column(
      "created_at",
      sa.DateTime(timezone=True),
      server_default=sa.text("now()"),
      nullable=False,
    ),
    sa.Column(
      "updated_at",
      sa.DateTime(timezone=True),
      server_default=sa.text("now()"),
      nullable=False,
    ),
    sa.PrimaryKeyConstraint("id"),
  )
  op.create_table(
    "sequence_videos_association",
    sa.Column("sequence_id", postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column("video_id", postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(["sequence_id"], ["sequences.id"]),
    sa.ForeignKeyConstraint(["video_id"], ["videos.id"]),
  )
  op.create_table(
    "sequence_responses",
    sa.Column(
      "id",
      postgresql.UUID(as_uuid=True),
      server_default=sa.text("gen_random_uuid()"),
      nullable=False,
    ),
    sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column("sequence_id", postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column("hide_responses", sa.Boolean(), nullable=False),
    sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
    sa.Column("items_finished", sa.Integer(), nullable=False),
    sa.Column("finished", sa.Boolean(), nullable=False),
    sa.Column(
      "created_at",
      sa.DateTime(timezone=True),
      server_default=sa.text("now()"),
      nullable=False,
    ),
    sa.Column(
      "updated_at",
      sa.DateTime(timezone=True),
      server_default=sa.text("now()"),
      nullable=False,
    ),
    sa.ForeignKeyConstraint(["sequence_id"], ["sequences.id"]),
    sa.ForeignKeyConstraint(["user_id"], ["users.id"]),
    sa.PrimaryKeyConstraint("id", "user_id", "sequence_id"),
    sa.UniqueConstraint("id"),
  )
  op.create_table(
    "sequence_challenges_association",
    sa.Column("sequence_id", postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column("challenge_id", postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(["challenge_id"], ["challenges.id"]),
    sa.ForeignKeyConstraint(["sequence_id"], ["sequences.id"]),
  )
  op.create_table(
    "sequence_response_response_association",
    sa.Column("sequence_responses_id", postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column("response_id", postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(["response_id"], ["responses.id"]),
    sa.ForeignKeyConstraint(["sequence_responses_id"], ["sequence_responses.id"]),
  )
  op.add_column("responses", sa.Column("hidden", sa.Boolean(), nullable=True))

  # Added these to allow non-nullable
  op.execute("UPDATE responses SET hidden = false")
  op.alter_column("responses", "hidden", nullable=False)

  op.drop_column("responses", "sequence_response_id")

  # ### end Alembic commands ###


def downgrade():
  # ### commands auto generated by Alembic - please adjust! ###
  op.add_column(
    "responses",
    sa.Column(
      "sequence_response_id", postgresql.UUID(), autoincrement=False, nullable=True
    ),
  )
  op.drop_column("responses", "hidden")
  op.drop_table("sequence_response_response_association")
  op.drop_table("sequence_challenges_association")
  op.drop_table("sequence_responses")
  op.drop_table("sequence_videos_association")
  op.drop_table("sequences")
  # This drop may not work...
  op.drop_constraint("responses_id_key", "responses", type_="unique")
  # ### end Alembic commands ###
