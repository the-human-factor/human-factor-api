version: '3.4'

volumes:
  devdb:

services:
  db:
    build:
      context: ./
      dockerfile: Dockerfile.postgres.dev
    command: postgres -c log_statement=all
    ports:
      - 5432
    volumes:
      - devdb:/var/lib/postgresql/data
  api:
    build:
      context: .
      target: dev-env
    command: ./bin/wait-for-postgres.sh db pipenv run flask run --host=0.0.0.0 --port=9000
    tty: true
    stdin_open: true
    environment:
      FLASK_ENV: development
      ENV_FOR_DYNACONF: development
      POSTGRES_USER: postgres
      FLASK_JWT_SECRET_KEY: 27a74d58e693489beb79b626300618f6d241443b3d4ed228d7bd15d67a6ad9fe
    ports:
      - "9000:9000"
    volumes:
        - ./:/app
        - ${PWD}/.pdbrc.py:/home/human/.pdbrc.py
    depends_on:
      - db
      - worker
  worker:
    build:
      context: .
      target: dev-env
    command: sh -c 'ack -f | entr pipenv run celery worker -A api.celery_worker.celery --loglevel=info'
    tty: true
    stdin_open: true
    environment:
      FLASK_ENV: development
      ENV_FOR_DYNACONF: development
      POSTGRES_USER: postgres
      FLASK_JWT_SECRET_KEY: 27a74d58e693489beb79b626300618f6d241443b3d4ed228d7bd15d67a6ad9fe
    volumes:
        - ./:/app
        - ${PWD}/.pdbrc.py:/home/human/.pdbrc.py
    depends_on:
      - db
      - redis
  redis:
    image: redis:5.0-buster
    ports:
      - "6379:6379"
